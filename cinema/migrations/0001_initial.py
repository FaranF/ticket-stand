# Generated by Django 5.0.1 on 2024-01-25 20:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('age', models.PositiveIntegerField(null=True)),
                ('picture', models.ImageField(null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('episode_number', models.IntegerField()),
                ('picture', models.ImageField(null=True, upload_to='')),
                ('description', models.TextField(null=True)),
                ('total_time', models.TimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('release_date', models.DateField()),
                ('total_time', models.TimeField()),
                ('picture', models.ImageField(upload_to='')),
                ('picture_background', models.ImageField(upload_to='')),
                ('description', models.TextField()),
                ('r_rated', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('R', 'Released'), ('P', 'In Production')], default='R', max_length=1)),
                ('featured_comments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cinema.comment')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_rating', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('picture', models.ImageField(null=True, upload_to='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinema.reviewer'),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=255)),
                ('object_id', models.PositiveIntegerField()),
                ('cast', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinema.cast')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.AddField(
            model_name='cast',
            name='featured_roles',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cinema.role'),
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('rating', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('episode_count', models.PositiveIntegerField()),
                ('picture', models.ImageField(null=True, upload_to='')),
                ('description', models.TextField(null=True)),
                ('featured_episodes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cinema.episode')),
            ],
        ),
        migrations.AddField(
            model_name='episode',
            name='Season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.season'),
        ),
        migrations.CreateModel(
            name='TVShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('finish_date', models.DateField()),
                ('rating', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('season_count', models.PositiveIntegerField()),
                ('picture', models.ImageField(upload_to='')),
                ('picture_background', models.ImageField(upload_to='')),
                ('description', models.TextField()),
                ('r_rated', models.BooleanField()),
                ('status', models.CharField(choices=[('R', 'Released'), ('P', 'In Production'), ('C', 'Canceled')], default='R', max_length=1)),
                ('featured_comments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cinema.comment')),
                ('featured_seasons', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cinema.season')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.genre')),
            ],
        ),
        migrations.AddField(
            model_name='season',
            name='tvshow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.tvshow'),
        ),
    ]
